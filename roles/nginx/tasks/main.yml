---
- import_tasks: ssl.yml

- name: Set nginx config
  set_fact:
    nginx_modules:
      - http_ssl_module
      - ngx_http_v2_module
      - ngx_http_v3_module
    nginx_service_modify: true
    nginx_service_timeout: 95

    nginx_config_debug_output: true

    nginx_config_main_template_enable: true
    nginx_config_main_template:
      template_file: nginx.conf.j2
      deployment_location: /etc/nginx/nginx.conf
      backup: true
      config:
        main:
          user: nginx
          worker_processes: auto
          error_log:
            file: /var/log/nginx/error.log
            level: notice
          pid: /var/run/nginx.pid
        events:
          worker_connections: 1024
        http:
          include:
            - /etc/nginx/mime.types
            - /etc/nginx/conf.d/*.conf

    nginx_config_http_template_enable: true
    nginx_config_http_template:
      - template_file: http/default.conf.j2
        deployment_location: /etc/nginx/conf.d/ember-grpc.conf
        config:
          upstreams:
            - name: ember-grpc
              least_conn: true
              servers:
                - address: 127.0.0.1:9090
          servers:
            - core:
                listen:
                  - port: 9443
                    ssl: true
                    #quic: true
                server_name: _
              log:
                access:
                  - path: /var/log/nginx/ember-grpc-access.log
                error:
                  - /var/log/nginx/ember-grpc-error.log
              locations:
                - location: /
                  grpc:
                    pass: grpc://ember-grpc
                    set_header:
                      field: Host
                      value: $host
              http2:
                enable: true
              http3:
                enable: true
              ssl:
                certificate: "{{ ssl_cert_filename }}"
                certificate_key: "{{ ssl_key_filename }}"
                protocols:
                  - TLSv1.2
                  - TLSv1.3

      - template_file: http/default.conf.j2
        deployment_location: /etc/nginx/conf.d/ember-rest.conf
        config:
          upstreams:
            - name: ember-rest
              least_conn: true
              servers:
                - address: 127.0.0.1:1317
          servers:
            - core:
                listen:
                  - port: 9317
                    ssl: true
                    #quic: true
                server_name: _
              log:
                access:
                  - path: /var/log/nginx/ember-rest-access.log
                error:
                  - /var/log/nginx/ember-rest-error.log
              locations:
                - location: /
                  proxy:
                    pass: http://ember-rest
                    set_header:
                      field: Host
                      value: $host
              http2:
                enable: true
              http3:
                enable: true
              ssl:
                certificate: "{{ ssl_cert_filename }}"
                certificate_key: "{{ ssl_key_filename }}"
                protocols:
                  - TLSv1.2
                  - TLSv1.3

      - template_file: http/default.conf.j2
        deployment_location: /etc/nginx/conf.d/ipfs-apis.conf
        config:
          upstreams:
            - name: ipfs-rpc-api
              least_conn: true
              servers:
                - address: 127.0.0.1:5001
            - name: ipfs-apis
              least_conn: true
              servers:
                - address: 127.0.0.1:8080
          servers:
            - core:
                listen:
                  - port: 5002
                    ssl: true
                    #quic: true
                server_name: _
                client_max_body_size: 100g
              log:
                access:
                  - path: /var/log/nginx/ipfs-apis-access.log
                error:
                  - /var/log/nginx/ipfs-apis-error.log
              locations:
                - location: /upload
                  proxy:
                    pass: http://ipfs-rpc-api/api/v0/add
                    set_header:
                      field: Host
                      value: $host
                    query_params:
                      pin: "true"
                - location: = /download
                  rewrite:
                    return:
                      code: 400
                      text: "'Missing required CID: /download/<cid>'"
                - location: = /download/
                  rewrite:
                    return:
                      code: 400
                      text: "'Missing required CID: /download/<cid>'"
                - location: /download
                  proxy:
                    pass: http://ipfs-apis/ipfs
                    set_header:
                      field: Host
                      value: $host
                - location: /health
                  rewrite:
                    return:
                      code: 200
                      text: "'Well at least nginx is happy'"
              http2:
                enable: true
              http3:
                enable: true
              ssl:
                certificate: "{{ ssl_cert_filename }}"
                certificate_key: "{{ ssl_key_filename }}"
                protocols:
                  - TLSv1.2
                  - TLSv1.3

- name: Setup nginx
  become: true
  import_role:
    name: nginxinc.nginx

- name: Setup nginx config
  become: true
  import_role:
    name: nginxinc.nginx_config
